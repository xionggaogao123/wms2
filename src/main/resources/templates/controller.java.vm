package ${package.Controller};

import cn.hutool.core.util.StrUtil;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.github.xiaoymin.knife4j.annotations.ApiOperationSupport;
import com.github.xiaoymin.knife4j.annotations.ApiSort;
import com.huanhong.wms.bean.Result;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import org.springframework.web.bind.annotation.*;
#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end
import com.huanhong.wms.entity.${entity};
import com.huanhong.wms.mapper.${table.mapperName};
import com.huanhong.wms.service.${table.serviceName};
import javax.annotation.Resource;
import javax.validation.Valid;
import java.util.Map;

@ApiSort()
@Api(tags = "$!{table.comment}")
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
    #if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {

    @Resource
    private ${table.serviceName} ${table.entityPath}Service;

    @ApiImplicitParams({
        @ApiImplicitParam(name = "current", value = "当前页码"),
        @ApiImplicitParam(name = "size", value = "每页行数"),
        @ApiImplicitParam(name = "search", value = "聚合搜索（标题）"),
    })
    @ApiOperationSupport(order = 1)
    @ApiOperation(value = "分页查询$!{table.comment}", notes = "生成代码")
    @GetMapping("/page")
    public Result<Page<${entity}>> page(@RequestParam(defaultValue = "1") Integer current, @RequestParam(defaultValue = "10") Integer size,
                                           @RequestParam Map<String, Object> search) {
        QueryWrapper<${entity}> query = new QueryWrapper<>();
        query.orderByDesc("id");
        if (search.containsKey("search")) {
            String text = search.get("search").toString();
            if (StrUtil.isNotEmpty(text)) {
                 query.and(qw -> qw.like("title", text).or()
                    .like("user_name", text)
             );
            }
        }
            return Result.success(${table.entityPath}Service.page(new Page<>(current, size), query));
        }

        @ApiOperationSupport(order = 2)
        @ApiOperation(value = "添加$!{table.comment}", notes = "生成代码")
        @PostMapping
        public Result add(@Valid @RequestBody ${entity} ${table.entityPath}) {
            return render(${table.entityPath}Service.save(${table.entityPath}));
        }

        @ApiOperationSupport(order = 3)
        @ApiOperation(value = "更新$!{table.comment}", notes = "生成代码")
        @PutMapping
        public Result update(@Valid @RequestBody ${entity} ${table.entityPath}) {
              return render(${table.entityPath}Service.updateById(${table.entityPath}));
        }

        @ApiOperationSupport(order = 4)
        @ApiOperation(value = "删除$!{table.comment}", notes = "生成代码")
        @DeleteMapping("/{id}")
        public Result delete(@PathVariable Integer id) {
            return render(${table.entityPath}Service.removeById(id));
        }

#else
public class ${table.controllerName} {
#end

}

#end